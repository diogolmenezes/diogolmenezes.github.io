<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: jekyll | dmenezes]]></title>
  <link href="http://diogolmenezes.github.io/blog/categories/jekyll/atom.xml" rel="self"/>
  <link href="http://diogolmenezes.github.io/"/>
  <updated>2014-01-21T15:45:15-02:00</updated>
  <id>http://diogolmenezes.github.io/</id>
  <author>
    <name><![CDATA[Diogo Menezes]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Creating a blog with Octopress]]></title>
    <link href="http://diogolmenezes.github.io/blog/2014/01/21/criando-um-blog-com-octopress/"/>
    <updated>2014-01-21T00:17:04-02:00</updated>
    <id>http://diogolmenezes.github.io/blog/2014/01/21/criando-um-blog-com-octopress</id>
    <content type="html"><![CDATA[<p><a href="http://octopress.org/">Octopress</a> is a cool framework for <a href="https://github.com/jekyll/jekyll">jekyll</a>
a blog-aware, static site generator in <a href="https://www.ruby-lang.org/pt/">Ruby</a> that allows you to create a static site based in templates, and markdowns files.</p>

<p>The effort to create a blog using Octopress is very small. First, you will need to clone the <a href="https://github.com/imathis/octopress">repository on GitHub</a>:</p>

<p><code>
$ git clone https://github.com/imathis/octopress.git my_octo_blog
</code></p>

<p>Then you will need to install the bundler and all the project dependences. If you are using RVM, I recommend that you use a new gemset for this process.</p>

<p><code>
$ cd my_octo_blog
$ gem install bundler
$ bundle install # download and install all project dependences
$ rake install   # install the default octopress theme
</code></p>

<p>Now you can generate the static site and then preview the blog at <a href="http://localhost:4000">http://localhost:4000</a>:</p>

<p><code>
$ rake generate # Generates posts and pages into the public directory
$ rake preview  # Mounts a webserver at &lt;http://localhost:4000&gt;
</code></p>

<p>The rake comand allows you to do many tasks, and you can see what are these tasks using the command <strong>rake list</strong>:</p>

<p>```
$ rake list # view all rake tasks</p>

<p>Tasks: clean, copydot, deploy, gen_deploy, generate, install, integrate, isolate, new_page,
new_post, preview, push, rsync, set_root_dir, setup_github_pages, update_source, update_style,
watch
```</p>

<p>So, lets create our first post:</p>

<p><code>
$ rake new_post['My first post']
mkdir -p source/_posts
Creating new post: source/_posts/2014-01-21-my-first-post.markdown
</code></p>

<p>The rake new_post task created the markdown file <strong>source/_posts/2014-01-21-my-first-post.markdown</strong> with the content:</p>

<p><code>
layout: post
title: "My first post"
date: 2014-01-21 11:14:44 -0200
comments: true
categories:
</code></p>

<blockquote><ul>
<li><strong>layout</strong>   &ndash; Is the page layout for the post. This layout file is located at the source/_layouts directory, and you can customize it if you want.</li>
<li><strong>title</strong>    &ndash; Is the post title</li>
<li><strong>date</strong>     &ndash; Is the post creation date</li>
<li><strong>comments</strong> &ndash; Indicates if the comments are allowed for this post (true/false)</li>
<li><strong>categories</strong> &ndash; Are the post categories, for example [all, job, great]</li>
<li><strong>author</strong> &ndash; Is the post author</li>
</ul>
</blockquote>

<p>Now that we know how a post is made, lets write:</p>

<h2>```</h2>

<p>layout: post
title: &ldquo;My first post&rdquo;
date: 2014-01-21 11:14:44 -0200
comments: true
categories: [all, job, great]</p>

<h2>author: &lsquo;Diogo Menezes&rsquo;</h2>

<p>Nice, this is my first post. :)</p>

<p>```</p>

<p>Lets preview the result on browser at <a href="http://localhost:4000">http://localhost:4000</a>.</p>

<p><code>
$ rake preview
</code></p>

<h2>Deploy on GitHub Pages</h2>

<p>Your blog is working on localhost but obviously you want to put it on the internet, dont you?</p>

<p>Fortunately, the GitHub has the <a href="http://pages.github.com/">GitHub Pages</a>, a service that allow you to host your site directly from your GitHub repository.</p>

<p>For this you will need to create a new repository named username.github.io, where username is your username (or organization name) on GitHub.</p>

<p>Then execute the rake setup_github_pages command to conect your blog with the GitHub repository. On this step you will need to put the URL of the new repository (<a href="http://github.com/username/username.github.io.git">http://github.com/username/username.github.io.git</a>)</p>

<p><code>
$ rake setup_github_pages
</code></p>

<p>After it you will have to generate the static content and then deploy the blog to GitHub Pages.</p>

<p><code>
$ rake generate
$ rake deploy
</code></p>

<p>Now, fire up a browser and go to <a href="http://username.github.io">http://username.github.io</a>. Give it a couple of minutes for your page to show upâ€”there will be a delay this very first time. In the future, changes will show up pretty much instantly.</p>

<h2>Using a custom domain  with GitHub Pages</h2>

<p>GitHub Pages allows you to direct a domain name of your choice at your Page.</p>

<p>Let&rsquo;s say you own the domain example.com, and you would like to use it for your Pages.</p>

<p>Just create a file named CNAME in the root of your pages (source/) and put the domain (or subdomain) into the file:</p>

<p><code>
example.com
</code></p>

<p>Next you will need to set up your DNS to point to your GitHub Pages address (<a href="http://username.github.io">http://username.github.io</a>)</p>

<p>This process can take a couple of minutes.</p>

<p>For more information about how to use custom domains you can go to the <a href="https://help.github.com/articles/setting-up-a-custom-domain-with-pages">official doc</a>.</p>

<p>In the next post I will write more about the configuration file (_config.yml), rake, and how to use custom themes in octopress.</p>

<p>If you have questions, comments or suggestions about this article, let me know.</p>
]]></content>
  </entry>
  
</feed>
