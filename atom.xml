<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[dmenezes]]></title>
  <link href="http://diogolmenezes.github.io/atom.xml" rel="self"/>
  <link href="http://diogolmenezes.github.io/"/>
  <updated>2014-11-29T15:52:01-02:00</updated>
  <id>http://diogolmenezes.github.io/</id>
  <author>
    <name><![CDATA[Diogo Menezes]]></name>
    <email><![CDATA[diogolmenezes@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to create the cordova app release version]]></title>
    <link href="http://diogolmenezes.github.io/blog/2014/11/23/how-to-create-the-cordova-app-release-version/"/>
    <updated>2014-11-23T02:02:42-02:00</updated>
    <id>http://diogolmenezes.github.io/blog/2014/11/23/how-to-create-the-cordova-app-release-version</id>
    <content type="html"><![CDATA[<p>If you want to put your app at google play store, you will need a signed release version of the app.</p>

<p>To do this, the first step is to generate the release key running the following command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>keytool -genkey -v -keystore ~/.certs/your_app_release.keystore -alias your_app_release -keyalg RSA -keysize 2048 -validity 100000</span></code></pre></td></tr></table></div></figure>


<p>After that you will need to set this key in the <strong><em>ant.properties</em></strong> file. This file  is normally
located at <strong><em>cordova_app_dir/platforms/android/</em></strong>, but if you dont find it, you can create this file.</p>

<p>In my case I needed to create the file and put this content:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>key.store=~/.certs/your_app_release.keystore
</span><span class='line'>key.alias=your_app_release</span></code></pre></td></tr></table></div></figure>


<p>Finaly you will need to compile the release version. In <strong><em>platform/android</em></strong> directory run the command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cordova build
</span><span class='line'>ant release</span></code></pre></td></tr></table></div></figure>


<p>Now, you can send the signed APK located at <strong><em>platform/android/bin</em></strong> to the <a href="https://play.google.com/apps/publish">Google Play Store</a>.</p>

<p>If you still have doubts <a href="http://himanen.info/publishing-android-app-to-google-play-store-with-cordova-cli/">read this</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to open links at native browser using cordova]]></title>
    <link href="http://diogolmenezes.github.io/blog/2014/11/22/how-to-open-links-at-native-browser-using-cordova/"/>
    <updated>2014-11-22T17:06:53-02:00</updated>
    <id>http://diogolmenezes.github.io/blog/2014/11/22/how-to-open-links-at-native-browser-using-cordova</id>
    <content type="html"><![CDATA[<p>By default the links in cordova apps don&rsquo;t open at phone native web browser.</p>

<p>To do this you have to install the inappbrowser plugin:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cordova plugin add org.apache.cordova.inappbrowser</span></code></pre></td></tr></table></div></figure>


<p>And then you can use _system target to open the links in native browser:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;a href="http://tripolist.com" target="_system"&gt;Open Tripolist&lt;/a&gt;
</span><span class='line'>
</span><span class='line'>or
</span><span class='line'>
</span><span class='line'>window.open("http://tripolist.com", "_system");</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating a tooltip box with Css]]></title>
    <link href="http://diogolmenezes.github.io/blog/2014/02/19/creating-a-tooltip-box-with-css/"/>
    <updated>2014-02-19T15:59:04-03:00</updated>
    <id>http://diogolmenezes.github.io/blog/2014/02/19/creating-a-tooltip-box-with-css</id>
    <content type="html"><![CDATA[<p>When we manipulate edges with CSS, we can see that they are rendered with a 45 degree angles. This means that if we define some edges as transparent, we can modify the appearance of the object.</p>

<p><img src="http://diogolmenezes.github.io/images/posts/tooltip1.png" alt="Tooltip Image" /></p>

<p><img src="http://diogolmenezes.github.io/images/posts/tooltip2.png" alt="Tooltip Image" /></p>

<p>Therefore, we can create triangles just setting its size to 0 and adjusting the size and transparency of the edges. As larger is the size of the border, greater is the size of the triangle.</p>

<p><img src="http://diogolmenezes.github.io/images/posts/tooltip3.png" alt="Tooltip Image" /></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>div {
</span><span class='line'>    width: 0px;
</span><span class='line'>    padding: 0px;
</span><span class='line'>    border:80px solid red;
</span><span class='line'>    border-bottom-color:black;
</span><span class='line'>    border-right-color:blue;
</span><span class='line'>    border-left-color:green;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>If we define 3 as transparent edges, we succeeded in isolating a triangle:</p>

<p><img src="http://diogolmenezes.github.io/images/posts/tooltip4.png" alt="Tooltip Image" /></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>div {
</span><span class='line'>    width: 0px;
</span><span class='line'>    padding: 0px;
</span><span class='line'>    border:30px solid transparent;
</span><span class='line'>    border-left-color:blue;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h2>Tooltip</h2>

<p>Now, using the pseudo-element :before we can place this triangle on the side of a div and create a tooltip box.</p>

<p><img src="http://diogolmenezes.github.io/images/posts/tooltip5.png" alt="Tooltip Image" /></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;p class="tooltip"&gt;This is a tooltip.&lt;/p&gt;</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.tooltip{
</span><span class='line'>    width:200px;
</span><span class='line'>    padding: 20px;
</span><span class='line'>    background:#963636;
</span><span class='line'>    color:#FFF;
</span><span class='line'>    position: relative;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>.tooltip:before{
</span><span class='line'>    border:10px solid transparent;
</span><span class='line'>    border-right-color:#963636;
</span><span class='line'>    content:"";
</span><span class='line'>    position: absolute;
</span><span class='line'>    left:-20px;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>You can use a bit of JQuery to display this custom tooltip when the user hovers over a link.</p>

<p><img src="http://diogolmenezes.github.io/images/posts/tooltip6.png" alt="Tooltip Image" /></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;p&gt;&lt;a href="#"&gt;link &lt;span class="tooltip"&gt;This is only a tooltip example.&lt;/span&gt;&lt;/a&gt; with tooltip&lt;/p&gt;</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>a { position: relative; }
</span><span class='line'>
</span><span class='line'>.tooltip {
</span><span class='line'>    display: none;
</span><span class='line'>    width:200px;
</span><span class='line'>    padding: 20px;
</span><span class='line'>    background:#963636;
</span><span class='line'>    color:#FFF;
</span><span class='line'>    position: absolute;
</span><span class='line'>    top:-100px;
</span><span class='line'>    left:-10px;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>.tooltip:before {
</span><span class='line'>    border:10px solid transparent;
</span><span class='line'>    border-top-color:#963636;
</span><span class='line'>    content:"";
</span><span class='line'>    position: absolute;
</span><span class='line'>    bottom:-20px;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;script type="text/javascript"&gt;
</span><span class='line'>    $(function() {
</span><span class='line'>      $('a').hover(function(){
</span><span class='line'>        $(this).find('.tooltip').show();
</span><span class='line'>      }, function(){
</span><span class='line'>        $(this).find('.tooltip').hide();
</span><span class='line'>      });
</span><span class='line'>
</span><span class='line'>    });
</span><span class='line'>&lt;/script&gt;</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Including HtmlAttributes dynamically on mvc helper]]></title>
    <link href="http://diogolmenezes.github.io/blog/2014/02/05/including-htmlattributes-dynamically-on-mvc-helper/"/>
    <updated>2014-02-05T16:57:57-02:00</updated>
    <id>http://diogolmenezes.github.io/blog/2014/02/05/including-htmlattributes-dynamically-on-mvc-helper</id>
    <content type="html"><![CDATA[<p>If you are working on a .Net MVC application and need to include a HtmlAttributes dynamically on mvc helper, you should know that its not so simple.</p>

<p>Lets say that you want to include dynamically a disable attribute if one condition is true. Typically, you do this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>if(canEdit)
</span><span class='line'>{
</span><span class='line'>    @Html.TextBoxFor(x=&gt; x.Name, new { maxlength = "50" })
</span><span class='line'>}
</span><span class='line'>else
</span><span class='line'>{
</span><span class='line'>    @Html.TextBoxFor(x=&gt; x.Name, new { maxlength = "50", disabled="disabled"})
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>We must to agree that its not beautiful. So lets create a extension method to do this job:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>namespace MyNameSpace
</span><span class='line'>{
</span><span class='line'>    public static class ExtensionMethods
</span><span class='line'>    {
</span><span class='line'>        public static RouteValueDictionary DisabledIf(this object htmlAttributes, bool disabled)
</span><span class='line'>        {
</span><span class='line'>            return htmlAttributes.AppendIf(disabled, "disabled", "disabled");
</span><span class='line'>        }
</span><span class='line'>
</span><span class='line'>        public static RouteValueDictionary AppendIf(this object htmlAttributes, bool condition, string attributeName, string attributeValue)
</span><span class='line'>        {
</span><span class='line'>            var attributes = new RouteValueDictionary(htmlAttributes);
</span><span class='line'>
</span><span class='line'>            if (condition)
</span><span class='line'>                attributes[attributeName] = attributeValue;
</span><span class='line'>
</span><span class='line'>            return attributes;
</span><span class='line'>        }
</span><span class='line'>    }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Now you only have to call the extension method passing the condition to disable the field:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> @Html.TextBoxFor(x=&gt; x.Name, new { maxlength = "50" }.DisabledIf(!canEdit))</span></code></pre></td></tr></table></div></figure>


<p>You also can use the AppendIf to append other attributes:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> @Html.TextBoxFor(x=&gt; x.Name, new { maxlength = "50" }.AppendIf(DateTime.Now.Day == 29, "onfocus", "alert('Today is 29, lets eat Gnocchi')"))</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to list active / open connections in Oracle?]]></title>
    <link href="http://diogolmenezes.github.io/blog/2014/01/31/how-to-list-active-slash-open-connections-in-oracle/"/>
    <updated>2014-01-31T13:19:51-02:00</updated>
    <id>http://diogolmenezes.github.io/blog/2014/01/31/how-to-list-active-slash-open-connections-in-oracle</id>
    <content type="html"><![CDATA[<p>If you are serching for a way to view all open/active connections at oracle, you can  use the v$session view.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>select * from v$session where username in ('MY_USERNAME');</span></code></pre></td></tr></table></div></figure>


<p>For more information about v$session you can go to the <a href="http://docs.oracle.com/cd/B19306_01/server.102/b14237/dynviews_2088.htm">official documentation</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using themes in octopress]]></title>
    <link href="http://diogolmenezes.github.io/blog/2014/01/22/using-themes-in-octopress/"/>
    <updated>2014-01-22T23:41:26-02:00</updated>
    <id>http://diogolmenezes.github.io/blog/2014/01/22/using-themes-in-octopress</id>
    <content type="html"><![CDATA[<p>Recently I talked about <a href="http://diogolmenezes.github.io/blog/2014/01/21/creating-a-blog-with-octopress">how to create a blog with octopress</a>. Now I will try to teach you how to apply themes in your octopress blog.</p>

<p>The process of configure themes on octopress is very simple, but before you will have to choose witch theme you will want to apply.</p>

<p>You will find various themes <a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes">here</a> and <a href="http://opthemes.com/">here</a>.</p>

<p>For this example, I chose the <a href="https://github.com/macjasp/cleanpress">CleanPress</a> theme.</p>

<p>Now the first step is clone the theme repository inside the .themes/ directory of your octopress blog.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd my_octo_blog
</span><span class='line'>$ git clone git://github.com/macjasp/cleanpress.git .themes/cleanpress</span></code></pre></td></tr></table></div></figure>


<p>Next, just install the theme and generate the static files this way:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake install['cleanpress']
</span><span class='line'>$ rake generate</span></code></pre></td></tr></table></div></figure>


<p>Fire up the webserver and go to <a href="http://localhost:4000">http://localhost:4000</a>. If everything runs well your blog will be with the new theme.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake preview</span></code></pre></td></tr></table></div></figure>


<p>You can create your own theme or edit existing themes too, its easy and makes your blog unique.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to generate a GUID with javascript]]></title>
    <link href="http://diogolmenezes.github.io/blog/2014/01/22/how-to-generate-a-guid-with-javascript/"/>
    <updated>2014-01-22T12:31:41-02:00</updated>
    <id>http://diogolmenezes.github.io/blog/2014/01/22/how-to-generate-a-guid-with-javascript</id>
    <content type="html"><![CDATA[<p>Generate a <a href="http://en.wikipedia.org/wiki/Globally_unique_identifier">GUID</a> in javascript is definitely not a common task, but if you need it, you can use the below function:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>function GetGuid() {
</span><span class='line'>    var result='';
</span><span class='line'>    for(var i=0; i&lt;32; i++)
</span><span class='line'>        result += Math.floor(Math.random()*16).toString(16).toUpperCase();
</span><span class='line'>    return result
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>If you are searching for an online GUID generator, you can use <a href="http://diogolmenezes.github.io/tools/guid.html">this one</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating ER diagram with Oracle Sql Developer]]></title>
    <link href="http://diogolmenezes.github.io/blog/2014/01/21/creating-er-diagram-with-oracle-sql-developer/"/>
    <updated>2014-01-21T15:25:28-02:00</updated>
    <id>http://diogolmenezes.github.io/blog/2014/01/21/creating-er-diagram-with-oracle-sql-developer</id>
    <content type="html"><![CDATA[<p>Today I needed to create a ER diagram for my oracle database, and realized that the Oracle Sql Developer is not so intuitive for this task.</p>

<p>First you will have to open Oracle Sql Developer and go to:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>File → Data Modeler → Import → Data Dictionary → select DB connection (or add if none) → Next → select your schema and tables</span></code></pre></td></tr></table></div></figure>


<p><img src="http://diogolmenezes.github.io/images/posts/diagram-sql-developer-1.png" alt="Alt text" /></p>

<h2>Updating the diagram</h2>

<p>If after making the diagram, you want to change it with the most recently database changes, you will need to select the changed table, click the right mouse button and choose Synchronize with Data Dictionary.</p>

<p><img src="http://diogolmenezes.github.io/images/posts/diagram-sql-developer-2.png" alt="Alt text" /></p>

<h2>Exporting the diagram</h2>

<p>For export the diagram to image, PDF or SVG, you have to go to:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>File → Data Modeler → Print Diagram → and choose you option </span></code></pre></td></tr></table></div></figure>


<p><img src="http://diogolmenezes.github.io/images/posts/diagram-sql-developer-3.png" alt="Alt text" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Creating a blog with Octopress]]></title>
    <link href="http://diogolmenezes.github.io/blog/2014/01/21/creating-a-blog-with-octopress/"/>
    <updated>2014-01-21T00:17:04-02:00</updated>
    <id>http://diogolmenezes.github.io/blog/2014/01/21/creating-a-blog-with-octopress</id>
    <content type="html"><![CDATA[<p><a href="http://octopress.org/">Octopress</a> is a cool framework for <a href="https://github.com/jekyll/jekyll">jekyll</a>
a blog-aware, static site generator in <a href="https://www.ruby-lang.org/pt/">Ruby</a> that allows you to create a static site based in templates, and markdowns files.</p>

<p>The effort to create a blog using Octopress is very small. First, you will need to clone the <a href="https://github.com/imathis/octopress">repository on GitHub</a>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git clone https://github.com/imathis/octopress.git my_octo_blog</span></code></pre></td></tr></table></div></figure>


<p>Then you will need to install the bundler and all the project dependences. If you are using RVM, I recommend that you use a new gemset for this process.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd my_octo_blog
</span><span class='line'>$ gem install bundler
</span><span class='line'>$ bundle install # download and install all project dependences
</span><span class='line'>$ rake install   # install the default octopress theme</span></code></pre></td></tr></table></div></figure>


<p>Now you can generate the static site and then preview the blog at <a href="http://localhost:4000">http://localhost:4000</a>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake generate # Generates posts and pages into the public directory
</span><span class='line'>$ rake preview  # Mounts a webserver at &lt;http://localhost:4000&gt;</span></code></pre></td></tr></table></div></figure>


<p>The rake comand allows you to do many tasks, and you can see what are these tasks using the command <strong>rake list</strong>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake list # view all rake tasks
</span><span class='line'>
</span><span class='line'>Tasks: clean, copydot, deploy, gen_deploy, generate, install, integrate, isolate, new_page, 
</span><span class='line'>new_post, preview, push, rsync, set_root_dir, setup_github_pages, update_source, update_style, 
</span><span class='line'>watch</span></code></pre></td></tr></table></div></figure>


<p>So, lets create our first post:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake new_post['My first post']
</span><span class='line'>mkdir -p source/_posts
</span><span class='line'>Creating new post: source/_posts/2014-01-21-my-first-post.markdown</span></code></pre></td></tr></table></div></figure>


<p>The rake new_post task created the markdown file <strong>source/_posts/2014-01-21-my-first-post.markdown</strong> with the content:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>layout: post
</span><span class='line'>title: "My first post"
</span><span class='line'>date: 2014-01-21 11:14:44 -0200
</span><span class='line'>comments: true
</span><span class='line'>categories:</span></code></pre></td></tr></table></div></figure>


<blockquote><ul>
<li><strong>layout</strong>   &ndash; Is the page layout for the post. This layout file is located at the source/_layouts directory, and you can customize it if you want.</li>
<li><strong>title</strong>    &ndash; Is the post title</li>
<li><strong>date</strong>     &ndash; Is the post creation date</li>
<li><strong>comments</strong> &ndash; Indicates if the comments are allowed for this post (true/false)</li>
<li><strong>categories</strong> &ndash; Are the post categories, for example [all, job, great]</li>
<li><strong>author</strong> &ndash; Is the post author</li>
</ul>
</blockquote>

<p>Now that we know how a post is made, lets write:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---
</span><span class='line'>layout: post
</span><span class='line'>title: "My first post"
</span><span class='line'>date: 2014-01-21 11:14:44 -0200
</span><span class='line'>comments: true
</span><span class='line'>categories: [all, job, great]
</span><span class='line'>author: 'Diogo Menezes'
</span><span class='line'>---
</span><span class='line'>
</span><span class='line'>Nice, this is my first post. :)
</span></code></pre></td></tr></table></div></figure>


<p>Lets preview the result on browser at <a href="http://localhost:4000">http://localhost:4000</a>.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake preview</span></code></pre></td></tr></table></div></figure>


<h2>Deploy on GitHub Pages</h2>

<p>Your blog is working on localhost but obviously you want to put it on the internet, dont you?</p>

<p>Fortunately, the GitHub has the <a href="http://pages.github.com/">GitHub Pages</a>, a service that allow you to host your site directly from your GitHub repository.</p>

<p>For this you will need to create a new repository named username.github.io, where username is your username (or organization name) on GitHub.</p>

<p>Then execute the rake setup_github_pages command to conect your blog with the GitHub repository. On this step you will need to put the URL of the new repository (<a href="http://github.com/username/username.github.io.git">http://github.com/username/username.github.io.git</a>)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake setup_github_pages</span></code></pre></td></tr></table></div></figure>


<p>After it you will have to generate the static content and then deploy the blog to GitHub Pages.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rake generate
</span><span class='line'>$ rake deploy</span></code></pre></td></tr></table></div></figure>


<p>Now, fire up a browser and go to <a href="http://username.github.io">http://username.github.io</a>. Give it a couple of minutes for your page to show up—there will be a delay this very first time. In the future, changes will show up pretty much instantly.</p>

<h2>Using a custom domain  with GitHub Pages</h2>

<p>GitHub Pages allows you to direct a domain name of your choice at your Page.</p>

<p>Let&rsquo;s say you own the domain example.com, and you would like to use it for your Pages.</p>

<p>Just create a file named CNAME in the root of your pages (source/) and put the domain (or subdomain) into the file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>example.com</span></code></pre></td></tr></table></div></figure>


<p>Next you will need to set up your DNS to point to your GitHub Pages address (<a href="http://username.github.io">http://username.github.io</a>)</p>

<p>This process can take a couple of minutes.</p>

<p>For more information about how to use custom domains you can go to the <a href="https://help.github.com/articles/setting-up-a-custom-domain-with-pages">official doc</a>.</p>

<p>In the next post I will write more about the configuration file (_config.yml), rake, and how to use custom themes in octopress.</p>

<p>If you have questions, comments or suggestions about this article, let me know.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Everything new again]]></title>
    <link href="http://diogolmenezes.github.io/blog/2014/01/20/everything-new-again/"/>
    <updated>2014-01-20T21:01:51-02:00</updated>
    <id>http://diogolmenezes.github.io/blog/2014/01/20/everything-new-again</id>
    <content type="html"><![CDATA[<p>After a few years without writing articles and without updating my personal website, I decided to work to revive this project.</p>

<p>I want to use this space to comment about software development and everything else that might interest me.</p>

<h2>Choosing new platform</h2>

<p>For this project, I wanted a tool that would allow me to have a blog with minimal effort and allowing me to use <a href="http://pt.wikipedia.org/wiki/Markdown">markdown</a> to write posts.</p>

<p>Looking possibilities I met the <a href="http://octopress.org/">Octopress</a> a really nice framework for <a href="https://github.com/jekyll/jekyll">Jekyll</a>, which is a <a href="https://www.ruby-lang.org/pt/">Ruby</a> tool that enables you to generate static templates from websites and markdowns.</p>

<p>I am enjoying the experience because beyond the speed of deployment of the blog, create <a href="http://pt.wikipedia.org/wiki/Markdown">markdown</a> posts is spectacular.</p>

<p>And you, know <a href="http://octopress.org/">Octopress</a>? What is your opinion about it?</p>
]]></content>
  </entry>
  
</feed>
